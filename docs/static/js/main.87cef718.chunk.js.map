{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MASlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SArBkB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,QAqBpBG,YAAa,gB,QC5BZC,EAAc,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIlC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAIA,Q,uBCTHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAXtB,kBAeZY,GAfY,4CAAH,sDCOPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAErB,ECLwB,SAAEA,GAC1B,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAU,WAEPlB,EAAQC,GACNkB,MAAM,SAAAC,GAEAC,YAAW,WACVJ,EAAS,CAELV,KAAMa,EACNL,SAAS,MAGZ,UAEV,CAACd,IAEGe,EDlBuBM,CAAarB,GAA/BW,EAAZ,EAAOL,KAAYQ,EAAnB,EAAmBA,QAEnB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IAClDc,EAAU,mBAAGlB,UAAU,UAAb,yBAAyC,KACrD,qBAAKA,UAAU,YAAf,SAEIe,EAAOH,KAAI,SAAAC,GAAG,OAGV,cAAC,EAAD,eAA6BA,GAAXA,EAAIC,aEhB7BY,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,aAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAKA,OACI,qCACA,oBAAIkB,UAAU,QAAd,0BACA,sBAAKA,UAAU,WAAf,UACA,cAAC,EAAD,CAAalB,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWf,KAAK,SAAAR,GAAQ,OACnB,cAAE,EAAF,CAECA,SAAWA,GADNA,e,MCjB3BwB,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.87cef718.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value)\n    }\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2){\n            setCategories(cats => [ inputValue, ...cats]);\n            setInputValue('');\n        }\n        \n\n       \n    }\n\n\n    return (\n        <form onSubmit={ handleSubmit}>\n            <input\n            type=\"text\"\n            value={inputValue}\n            onChange={ handleInputChange }\n            placeholder={'Buscador'}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ( { title, url} ) => {\n\n   \n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs = async(category) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=mbogJW7TH16uTnLwIPp4CDlDT8z9MWDY`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n\n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n\n    })\n    return gifs;\n\n\n}","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\n\nimport { useFetchGifs } from './hooks/useFetchGifs';\n\n\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            { loading ? <p className=\"loading\">Loading ...</p> : null}\n            <div className=\"card-grid\">\n            {\n                images.map(img=>(\n                   \n\n                    <GifGridItem key={img.id}{...img}/>\n\n                ))\n            }\n            </div>\n        \n        </>\n    \n    )\n}\n\n\n","import {useState, useEffect} from 'react'\nimport { getGifs } from '../../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n\n    });\n\n    useEffect(() => {\n        \n       getGifs(category)\n        .then( imgs => {\n           \n               setTimeout(()=>{\n                setState({\n\n                    data: imgs,\n                    loading: false\n    \n                })\n               },3000)   \n        })        \n    }, [category])\n\n    return state;\n\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ()=>{\n\n    \n    const [categories, setCategories] = useState(['Mr Robot']);\n\n   \n\n\n    return(\n        <>\n        <h2 className=\"title\">GifExpertApp</h2>\n        <div className=\"division\">\n        <AddCategory setCategories={setCategories} />\n        <hr/>\n        \n        <ol>\n            {\n                categories.map( category=> \n                     < GifGrid\n                      key={category}\n                      category= {category}/>\n                )\n            }\n        </ol>\n\n       \n        </div>\n\n\n\n        </>\n\n    )\n\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}